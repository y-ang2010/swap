import { Buffer } from 'buffer/';
import { Agent, ReadStateResponse } from './agent';
export declare type HashTree = [0] | [1, HashTree, HashTree] | [2, ArrayBuffer, HashTree] | [3, ArrayBuffer] | [4, ArrayBuffer];
export declare class Certificate {
    private _agent;
    private readonly cert;
    private verified;
    private _rootKey;
    constructor(response: ReadStateResponse, _agent?: Agent);
    lookup(path: Buffer[]): Buffer | undefined;
    verify(): Promise<boolean>;
    private _checkDelegation;
}
/**
 * @param t
 */
export declare function reconstruct(t: HashTree): Promise<Buffer>;
/**
 * @param path
 * @param tree
 */
export declare function lookup_path(path: Buffer[], tree: HashTree): Buffer | undefined;
